@model WeeklyScheduleViewModel
@using EmployeeClockinSystem.ViewModels


@{
    var startDate = Model.StartDate;
    var endDate = Model.EndDate;
    var daysOfWeek = Enumerable.Range(0, 7).Select(offset => startDate.AddDays(offset)).ToList();
}


@{
    ViewData["Title"] = "Schedules";
}


<!-- Date Navigation -->
<div class="mt-3">
    <a href="@Url.Action("ShowWeeklyScheduleForAllEmployees", new { startDate = startDate.AddDays(-7), endDate = startDate.AddDays(0) })" class="btn btn-outline-primary">Previous Week</a>
    <a href="@Url.Action("ShowWeeklyScheduleForAllEmployees", new { startDate = endDate.AddDays(0), endDate = endDate.AddDays(7) })" class="btn btn-outline-primary">Next Week</a>
</div>

<table class="table table-bordered mt-3">
    <thead>
        <tr>
            <th>Employee</th>
            @foreach (var day in daysOfWeek)
            {
                <th>@day.DayOfWeek <br /> @day.ToString("dd/MM/yyyy")</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var employee in Model.Employees)
        {
            <tr>
                 <td>@employee.FullName</td>
               @foreach (var day in daysOfWeek)
                {
                    var scheduleForTheDay = employee.Schedules.FirstOrDefault(s => s.EmployeeId == employee.EmployeeId && s.StartDate.Date == day.Date);
                    
                    if (scheduleForTheDay != null)
                    {
                        <td>@scheduleForTheDay.StartDate - @scheduleForTheDay.EndDate </td>
                    }
                    else
                    {
                        <td>-</td>
                    }
                }
            </tr>
        }
    </tbody>
</table>
